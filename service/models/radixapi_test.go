package models

import (
	"testing"

	"github.com/equinor/radix-vulnerability-scanner-api/radix_api/generated_client/models"
	"github.com/stretchr/testify/assert"
)

func Test_ComponentSummary_FromRadixApiModel(t *testing.T) {
	stringPtr := func(s string) *string { return &s }
	sut := ComponentSummary{}
	sut.FromRadixApiModel(&models.ComponentSummary{Image: stringPtr("anyimg"), Name: stringPtr("anyname"), Type: stringPtr("anytype")})
	assert.Equal(t, ComponentSummary{Image: "anyimg", Name: "anyname", Type: "anytype"}, sut)
}

func Test_DeploymentSummary_FromRadixApiModel(t *testing.T) {
	stringPtr := func(s string) *string { return &s }

	sut := DeploymentSummary{}
	sut.FromRadixApiModel(&models.DeploymentSummary{Name: stringPtr("anydeployname"), Components: []*models.ComponentSummary{
		{Image: stringPtr("anyimg1"), Name: stringPtr("anyname1"), Type: stringPtr("anytype1")},
		{Image: stringPtr("anyimg2"), Name: stringPtr("anyname2"), Type: stringPtr("anytype2")},
	}})
	assert.Equal(t, DeploymentSummary{Name: "anydeployname", Components: []ComponentSummary{
		{Image: "anyimg1", Name: "anyname1", Type: "anytype1"},
		{Image: "anyimg2", Name: "anyname2", Type: "anytype2"},
	}}, sut)

}

func Test_EnvironmentSummary_FromRadixApiModel(t *testing.T) {
	stringPtr := func(s string) *string { return &s }

	// No active deployment
	sut := EnvironmentSummary{}
	sut.FromRadixApiModel(&models.EnvironmentSummary{Name: "anyenvname"})
	assert.Equal(t, EnvironmentSummary{Name: "anyenvname"}, sut)

	// With active deployment
	sut = EnvironmentSummary{}
	sut.FromRadixApiModel(&models.EnvironmentSummary{Name: "anyenvname", ActiveDeployment: &models.DeploymentSummary{
		Name: stringPtr("anydeployname"), Components: []*models.ComponentSummary{
			{Image: stringPtr("anyimg1"), Name: stringPtr("anyname1"), Type: stringPtr("anytype1")},
			{Image: stringPtr("anyimg2"), Name: stringPtr("anyname2"), Type: stringPtr("anytype2")},
		},
	}})
	assert.Equal(t, EnvironmentSummary{Name: "anyenvname", ActiveDeployment: &DeploymentSummary{
		Name: "anydeployname", Components: []ComponentSummary{
			{Image: "anyimg1", Name: "anyname1", Type: "anytype1"},
			{Image: "anyimg2", Name: "anyname2", Type: "anytype2"},
		},
	}}, sut)
}

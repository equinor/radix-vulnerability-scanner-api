BINS	= radix-vulnerability-scanner-api
.PHONY: build
build: $(BINS)

.PHONY: test
test:
	go test -cover `go list ./...`

.PHONY: lint
lint: bootstrap
	golangci-lint run --max-same-issues 0

.PHONY: generate-radix-api-client
generate-radix-api-client: bootstrap
	swagger generate client -t ./radix_api/generated_client -f https://api.radix.equinor.com/swaggerui/swagger.json -A RadixApi

.PHONY: generate-radixconfig-envs
generate-radixconfig-envs:
	# radix-id-vulnerability-scan-reader-<env>
	AZURE_CLIENT_ID=5bf4ef3d-6c0b-4eee-89ed-966a897eef6e envsubst < radixconfig.yaml > radixconfig.dev.yaml
	AZURE_CLIENT_ID=5381b944-c904-4c5d-8672-7cedadaf50af envsubst < radixconfig.yaml > radixconfig.c2.yaml
	AZURE_CLIENT_ID=96ef36ff-ac7d-4d30-94b3-ea72ad29a7e2 envsubst < radixconfig.yaml > radixconfig.platform.yaml
	AZURE_CLIENT_ID=5dfa299b-f2bf-459a-b780-10ff32f98b4d envsubst < radixconfig.yaml > radixconfig.playground.yaml


# This make command is only needed for local testing now
# we also do make swagger inside Dockerfile
# swagger generate spec -o ./swagger.json --scan-models
.PHONY: swagger
swagger: bootstrap
	swagger generate spec -o ./swaggerui/html/swagger.json -m -x=github.com/equinor/radix-vulnerability-scanner-api/radix_api/generated_client/models
	swagger validate ./swaggerui/html/swagger.json

.PHONY: mocks
mocks: bootstrap
	mockgen -source ./api/vulnerability/handler.go -destination ./api/vulnerability/mock/handler.go -package mock
	mockgen -source ./repository/repository.go -destination ./repository/mock/repository.go -package mock
	mockgen -source ./service/radixapi.go -destination ./service/mock/radixapi.go -package mock
	mockgen -source ./radix_api/generated_client/client/environment/environment_client.go -destination ./radix_api/mock_client/client/environment/environment_client.go -package environmentmock
	mockgen -source ./utils/auth/auth_provider.go -destination ./utils/auth/mock/auth_provider.go -package mock

HAS_SWAGGER       := $(shell command -v swagger;)
HAS_GOLANGCI_LINT := $(shell command -v golangci-lint;)
HAS_MOCKGEN       := $(shell command -v mockgen;)

bootstrap:
ifndef HAS_SWAGGER
	go install github.com/go-swagger/go-swagger/cmd/swagger@v0.30.5
endif
ifndef HAS_GOLANGCI_LINT
	curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
endif
ifndef HAS_MOCKGEN
	go install github.com/golang/mock/mockgen@v1.6.0
endif
